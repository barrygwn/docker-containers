#!/bin/bash

PATH=/usr/sbin:/usr/bin:/sbin:/bin
APP_NAME="teamviewer"
APP_USER=${APP_USER:-appuser}
APP_REPO=${APP_REPO:-"hurricanehrndz"}

# do we need to use sudo to start docker containers?
( id -Gn | grep -q docker ) || SUDO=sudo

USER_UID=$(id -u)
USER_GID=$(id -g)

XSOCK=/tmp/.X11-unix
XAUTH=/tmp/.docker.xauth

list_commands() {
  echo ""
  echo "Launch ${APP_NAME} using:"
  echo "  ${APP_NAME}                        - Launch ${APP_NAME}"
  echo ""
  exit 1
}

cleanup_stopped_instances() {
  echo "Cleaning up stopped ${APP_NAME} instances..."
  for c in $(${SUDO} docker ps -a -q)
  do
    image=$(${SUDO} docker inspect -f {{.Config.Image}} ${c})
    if [[ ${image} == "${APP_REPO}/${APP_NAME}:latest" ]]; then
      running=$(${SUDO} docker inspect -f {{.State.Running}} ${c})
      if [[ ${running} != true ]]; then
        ${SUDO} docker rm -v "${c}" >/dev/null
      fi
    fi
  done
}

prepare_docker_env_parameters() {
  ENV_VARS+=" --env=USER_UID=${USER_UID}"
  ENV_VARS+=" --env=USER_GID=${USER_GID}"
  ENV_VARS+=" --env=DISPLAY"
  ENV_VARS+=" --env=XAUTHORITY=${XAUTH}"
  ENV_VARS+=" --env=TZ=$(cat /etc/timezone)"
  ENV_VARS+=" --env=APP_USER=${APP_USER}"
}

prepare_docker_volume_parameters() {
  touch ${XAUTH}
  xauth nlist :0 | sed -e 's/^..../ffff/' | xauth -f ${XAUTH} nmerge -

  VOLUMES+=" --volume=${XSOCK}:${XSOCK}"
  VOLUMES+=" --volume=${XAUTH}:${XAUTH}"
}

prog=$(basename $0)
exec=$(which $prog)
if [[ ${prog} == "${APP_NAME}" ]]; then
  [ "${1}" == "bash" ] && \
    prog=bash && \
    shift
  [[ "${1}" == "help" ]] && \
    list_commands && \
    exit 1
fi

cleanup_stopped_instances
prepare_docker_env_parameters
prepare_docker_volume_parameters

echo "Starting ${prog}..."
if [ "$prog" == "bash" ]; then
  ${SUDO} docker run -it \
    --rm \
    --net=host \
    ${ENV_VARS} \
    ${VOLUMES} \
    --name="${APP_NAME}_${prog}" \
    ${APP_REPO}/${APP_NAME}:latest ${prog} $@
else
  ${SUDO} docker run -d \
    --net=host \
    ${ENV_VARS} \
    ${VOLUMES} \
    --name="${prog}" \
    ${APP_REPO}/${APP_NAME}:latest > /dev/null
fi
